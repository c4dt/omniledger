language: minimal
dist: trusty

addons:
  ssh_known_hosts: c4dtsrv1.epfl.ch

stages:
  - build
  - name: deploy
    if: branch = main

jobs:
  include:

    - stage: build
      name: conode
      language: go
      go: "1.12.x"
      script:
        - cd conode
        - make
        - make docker_start_detached
        - make docker_wait
        - docker exec conode bash -c './bcadmin latest --bc conodes/bc*cfg'

    - name: dynacred
      language: node_js
      node_js: "12"
      install:
       - gimme 1.12.4
       - . $HOME/.gimme/envs/go1.12.4.env
       - ( git clone --depth=1 https://github.com/dedis/cothority; cd cothority; make docker )
       - rm -rf cothority
       - cd dynacred && npm ci
      script: npm run test

    - name: webapp
      language: node_js
      node_js: "12"
      install:
        - gimme 1.12.4
        - . $HOME/.gimme/envs/go1.12.4.env
        - ( cd dynacred && npm ci )
        - cd webapp && npm ci
      before_script: npm run lint
      script:
        - npm run build:prod
# Currently there are no tests available, so we cannot test it...
#        - make -C ../conode docker_run &
#        - make -C ../conode docker_wait
#        - npm run test --no-watch

    - name: webapp/cas
      language: go
      go: 1.x
      install:
        - cd webapp/cas
        - export GO111MODULE=on
        - go get golang.org/x/lint/golint
        - go get honnef.co/go/tools/cmd/staticcheck
        - go get ./...
      before_script:
        - test -z "`gofmt -l .`"
        - go vet ./...
        - golint -set_exit_status . cmd/...
        - staticcheck ./...
      script:
        - make
        - go test ./...

    - stage: deploy
      name: login.c4dt.org
      before_deploy:
        - echo "$DEPLOY_SSH_KEY" > "$HOME/.ssh/id_ed25519"
        - chmod 600 "$HOME/.ssh/id_ed25519"
      deploy:
        provider: script
        script: ssh omniledger@c4dtsrv1.epfl.ch bin/update.sh

    - name: NPM
      language: node_js
      node_js: "12"
      script: skip # node_js.script default to `make test`
      before_deploy: echo "//registry.npmjs.org/:_authToken=${DEPLOY_NPM_TOKEN}" > "$HOME/.npmrc"
      deploy:
        provider: script
        script: cd dynacred && npm ci && npm version prerelease --preid=p`date +%Y%m%d%H%M%S` && npm publish --tag dev

notifications:
  email: false
