name: deploy

on:
    push:
        branches: [main]
    workflow_dispatch:

env:
    DEPLOY_USER: omniledger
    DEPLOY_HOST: srv1.c4dt.org

jobs:
    github-release:
        name: github release
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: webapp
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v2
              with:
                  node-version: 12
                  cache: npm
                  cache-dependency-path: webapp/package-lock.json

            - run: npm ci
            - run: npm link ../dynacred

            - run: npx ng build --prod --base-href / --aot --output-path www
            - name: build for old login
              run: |
                  npx ng build --prod --base-href /omniledger/ --aot --output-path omniledger_www
                  cp omniledger_www/index.html www/index_ol.html

            - uses: actions/setup-go@v2
              with:
                  go-version: '^1.18'
            - name: Prepare for release
              run: |
                  GOBIN=$PWD/bin go install github.com/c4dt/omniledger/webapp/cas/cmd/cas@latest
                  mv README.release.md README.md
                  echo "tag=$( date +%Y-%m-%d_%H.%M )" >> $GITHUB_ENV
                  tar czf omniledger.tgz www bin

            - name: Create github release
              uses: ncipollo/release-action@v1
              with:
                  body: "Release of the omniledger webapp"
                  artifacts: "webapp/omniledger.tgz,webapp/README.md"
                  commit: main
                  tag: ${{ env.tag }}

            - uses: kielabokkie/ssh-key-and-known-hosts-action@v1.2.0
              with:
                  ssh-host: ${{ env.DEPLOY_HOST }}
                  ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
            - name: Trigger remote install
              run: >
                  ssh "${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}"
                  "bin/install.sh ${{ env.tag }} &&
                  sudo /bin/systemctl restart omniledger-api.service"

    prerelease-dynacred:
        name: prerelease dynacred
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: dynacred
        steps:
            - uses: actions/checkout@v2

            - uses: actions/setup-node@v2
              with:
                  node-version: 12
                  cache: npm
                  cache-dependency-path: dynacred/package-lock.json

            - run: npm ci

            - run: npm version prerelease --preid=p`date +%Y%m%d%H%M%S`

            - uses: JS-DevTools/npm-publish@v1
              with:
                  token: ${{ secrets.DEPLOY_NPM_TOKEN }}
                  package: dynacred/package.json
                  tag: dev
